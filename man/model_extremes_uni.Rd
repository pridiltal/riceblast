% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model_extremes_uni.R
\name{model_extremes_uni}
\alias{model_extremes_uni}
\title{Model typical behaviour and estimate anomalous threshold}
\usage{
model_extremes_uni(
  typical_data = NULL,
  full_data = NULL,
  time_col,
  typical_start = NULL,
  typical_end = NULL,
  response,
  thr_prob_fit = 0.05,
  thr_prob_alarm = 0.005,
  t_method = c("evd", "boxplot"),
  k = 1
)
}
\arguments{
\item{typical_data}{A tsibble containing the typical observation window for model fitting.
If provided, this dataset will be used instead of subsetting `full_data`.}

\item{full_data}{Optional tsibble object containing both typical observation window and
test data window. (ignored if `typical_data` is provided).}

\item{time_col}{Name of the time index column.}

\item{typical_start}{Optional Start date-time (character or POSIXct) defining the beginning
of the typical observation window used for model fitting. (ignored if `typical_data` is provided).}

\item{typical_end}{End date-time (character or POSIXct) defining the end
of the typical observation window. (ignored if `typical_data` is provided).}

\item{response}{The response variable to model, passed as an unquoted column name.}

\item{thr_prob_fit}{Numeric. Tail probability used to define the POT threshold for
fitting the Generalized Pareto Distribution (GPD). A larger value (e.g. 0.05)
includes more tail observations to improve parameter stability.}

\item{thr_prob_alarm}{Numeric. Tail probability used when computing the lower extreme
limit from the fitted GPD. This is typically smaller than \code{thr_prob_fit}
(e.g. 0.005) to obtain a more conservative alarm threshold and reduce false positives.}

\item{t_method}{Character string indicating the threshold estimation method.
Options are:
\itemize{
  \item `"evd"` — estimates the threshold using the Generalized Pareto Distribution.
  \item `"boxplot"` — uses the boxplot rule (1.5 × IQR below Q1) to identify lower extremes.
}}

\item{k}{Numeric. Safety margin multiplier applied to the EVT-derived lower limit.
This value widens the threshold to reduce false positives by accounting for
estimation uncertainty in the tail. For example, k = 0.5 subtracts half a standard
deviation of residuals from the EVT lower limit.}
}
\value{
A list containing:
\describe{
  \item{model}{The fitted ARIMA model object.}
  \item{lower_limit}{The estimated lower extreme threshold.}
  \item{upper_limit}{The estimated upper extreme threshold.}
  \item{threshold_method}{The threshold estimation method used (`"evd"` or `"boxplot"`).}
  \item{typical_data}{The subset of the time series used for model fitting.}
  \item{response}{The response variable name.}
  \item{time_col}{Name of the time index column.}
}
}
\description{
Fits an ARIMA model on a subset of the time series representing "typical" behavior
and estimates a lower extreme threshold based on either Extreme Value Theory (EVT)
using the Generalized Pareto Distribution (GPD) or a boxplot-based approach.
}
\details{
The function first subsets the input time series between `typical_start` and `typical_end`
to capture non-extreme, representative behavior. An ARIMA model is automatically fitted
using the `fable` framework, and residuals are extracted.

Depending on the chosen `t_method`, the lower extreme threshold is estimated:
\itemize{
  \item For `"evd"` — the Generalized Pareto Distribution is fitted to the lower tail
        of residuals using \code{fpot()} from the \pkg{evd} package.
  \item For `"boxplot"` — the lower whisker (Q1 − 1.5 × IQR) is used as the threshold.
}
}
\examples{
# Create a sample daily time series dataset
data <- tsibble::tsibble(
  date = seq.Date(as.Date("2020-01-01"), as.Date("2020-12-31"), by = "day"),
  value = c(rnorm(300),rnorm(66, -3)),
  index = date
)

result <- model_extremes_uni(
  full_data = data,
  time_col = date,
  typical_start = "2020-01-01",
  typical_end = "2020-08-30",
  response = value,
  thr_prob_fit = 0.1,
  t_method = "boxplot"
)

}
