% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/test_extremes.R
\name{test_extremes}
\alias{test_extremes}
\title{Test Model Extremes on Fitted and Forecasted Periods}
\usage{
test_extremes(analysis_result, h = 1000)
}
\arguments{
\item{analysis_result}{A list object returned by \code{\link{model_extremes}},
containing the fitted model, lower limit, and related metadata.}

\item{h}{Integer. The forecast horizon, i.e., the number of future observations
to predict. Default is 1000.}
}
\value{
A list containing:
\describe{
  \item{model}{The fitted model object from \code{analysis_result}.}
  \item{forecast}{A \code{fable} forecast object containing mean forecasts and intervals.}
  \item{all_errors}{A \code{tsibble} containing both fitted residuals and forecast errors.}
  \item{lower_limit}{The estimated lower extreme threshold (inherited from the model analysis).}
  \item{full_data}{The complete input dataset used for modeling and testing.}
  \item{response}{The response variable name as a character string.}
}
}
\description{
Extends the analysis from \code{\link{model_extremes}} by generating forecasts
and evaluating model residuals and forecast errors relative to the estimated
lower extreme threshold. This helps to assess whether future values fall within
the expected range or cross the lower extreme boundary.
}
\details{
The function performs two main tasks:
\itemize{
  \item Generates forecasts (\code{h} steps ahead) using the fitted model.
  \item Combines fitted residuals (from the training window) and forecast errors
        (from the forecasted window) into a unified time series object for
        downstream analysis and visualization.
}

Forecast errors are computed as the difference between the observed response
variable and the forecast mean. Both fitted and forecast errors are combined
with labels for easy comparison and plotting.
}
\examples{
\dontrun{
library(tsibble)
library(fable)

# Assume model_extremes() has been run
result <- model_extremes(
  full_data = mydata,
  typical_start = "2020-01-01",
  typical_end = "2020-03-31",
  response = temperature
)

test_result <- test_extremes(result, h = 200)

test_result$all_errors
}

}
